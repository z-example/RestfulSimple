apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.5
version = '1.0'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        //这里指定了spring-boot的版本,下面就可以省略了
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
    }
}

repositories {
    jcenter()
}

dependencies {
    //Spring Boot
    compile("org.springframework.boot:spring-boot-devtools")//Make Project自动加载class等
//    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jersey")
//    compile("org.springframework.boot:spring-boot-starter-jetty")

    //libs
    compile("org.glassfish.jersey.media:jersey-media-multipart:2.22.1")

    //test
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

bootRun {
    addResources = true //Make Project自动加载class等
}

task "init" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }

//    mkdir('conf/dev')
//    mkdir('conf/test')
//    mkdir('conf/production')

    mkdir('src/main/java/org/example/api')
    mkdir('src/main/java/org/example/conf')
    mkdir('src/main/java/org/example/domain')

}
